declare
fun {Size Ls}
   case Ls of nil then 0
   [] _|Lr then 1+{Size Lr}
   end
end

{Browse {Size [a b c]}}

% Invertir una lista
declare
fun {Concat Ls Ms}
   case Ls of nil then Ms
   [] X|Lr then X|{Concat Lr Ms}
   end
end


declare
fun {Invertir Xs}
   case Xs of nil then nil
   [] X|Xr then
      {Concat {Invertir Xr}
       [X]}
   end
end

{Browse {Invertir [2 3 4 5 6 7 8 9 10]}}

% Version declarativa
declare
fun {Gen L H}
   {Delay 100}
   if L > H then nil
   else L|{Gen L+1 H} end
end
Xs = {Gen 1 10}
{Browse Xs}

declare
Ys = {Map Xs fun {$ X} X*X end}
{Browse Ys}

% Version concurrente declarativa

declare
thread Xs = {Gen 1 10} end
thread Ys = {Map Xs fun {$ X} X*X end} end
{Browse Ys}

declare X0 X1 X2 X3 in
thread
   Y0 Y1 Y2 Y3 in
   {Browse [Y0 Y1 Y2 Y3]}
   Y0 = X0 + 1
   Y1 = X1 + Y0
   Y2 = X2 + Y1
   Y3 = X3 + Y2
   {Browse listo}
end
{Browse [X0 X1 X2 X3]}

X0 = 0
{Delay 2000}

X1 = 1
{Delay 2000}

X2 = 2
{Delay 2000}

X3 = 3

% Version concurrente de Map

declare
fun {MapC Xs F}
   case Xs of nil then nil
   [] X|Xr then
      thread {F X} end | {Map Xr F}
   end
end

{Browse mapC#{MapC [1 2 3] fun {$ A} {Delay 15000} A*A end}}

% Fibonacci

declare
fun {FibD X}
   if X =< 2 then 1
   else {FibD X-1} + {FibD X-2}
   end
end
fun {FibC X}
   if X =< 2 then 1
   else thread {FibC X-1} end + {FibC X-2}
   end
end

{Browse {FibC 35}}

% Flujos

declare Xs Xs2
Xs = 0|1|2|3|4|Xs2
{Browse Xs}
declare Xs3 in
Xs2 = 5|6|7|Xs3

Xs3 = nil

% Productor-Consumidor ejemplo

% Productor
declare
fun {Generar N Limite}
   if N < Limite then N|{Generar N+1 Limite}
   else nil end
end
% Consumidor
declare
fun {Suma Xs A} % Xs: lista; A: acumulado de la suma
   case Xs of X|Xr then {Suma Xr A+X}
   [] nil then A
   end
end

local Xs S in
   thread {Browse Xs} Xs = {Generar 0 150} end
   thread S = {Suma Xs 0} end
   {Browse S}
end

% Multiples lectores
local Xs S1 S2 S3 in
   thread Xs = {Generar 0 150000} end
   thread S1 = {Suma Xs 0} end
   thread S2 = {Suma Xs 0} end
   thread S3 = {Suma Xs 0} end
   {Browse s1#S1#s2#S2#s3#S3}
end

% Filtros
